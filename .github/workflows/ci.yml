name: CI workflow

on:
  push:
    branches: [ dev, master ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ dev ]

jobs:
  phpunit:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php: [7.4]
        os: [ubuntu-20.04]
        wordpress: [5.9.3, latest]
        experimental: [false]
        include:
          - php: 8.0
            os: ubuntu-20.04
            wordpress: latest
            experimental: true
    name: Test - PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start required services
        run: sudo systemctl start mysql.service

      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ matrix.php }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v1
          coverage: pcov
        if: matrix.experimental == false

      - name: Setup PHP with Composer 2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: pcov
        if: matrix.experimental == true

      - name: Install Node dependencies
        run: |
          node -v
          npm install
          npm run build
        if: matrix.experimental == false

      - name: Install PHP dependencies
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          composer install --no-interaction
          git clone --depth=1 https://github.com/pressbooks/pressbooks.git ../pressbooks
          cd ../pressbooks && composer install --no-dev
          cd ../pressbooks-saml-sso

      - name: Run lint
        run: npm run lint
        if: matrix.experimental == false

      - name: Run PHP CodeSniffer
        run: composer standards

      - name: Install WP tests
        run: bash bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wordpress }}

      - name: Run PHP Tests
        run: composer test
        if: matrix.experimental == true

      - name: Run PHP Tests and PCOV
        run: composer test-coverage
        if: matrix.experimental == false

      - name: Upload Coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.experimental == false && matrix.php == 7.3

      - name: Prepare Build
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export COMPOSER_MEMORY_LIMIT=-1
          export GITHUB_BUILD_PATH=${{github.workspace}}
          export GITHUB_REPO_SLUG="$(basename ${{github.workspace}})"
          export GITHUB_TAG="$(basename ${{github.ref}})"
          echo "File to be created : $GITHUB_BUILD_PATH/$GITHUB_REPO_SLUG-$GITHUB_TAG.zip"
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          mv wp-cli.phar /usr/local/bin/wp
          wp package install wp-cli/dist-archive-command
          npm run build
          composer install --no-dev --optimize-autoloader
          cd ..
          wp dist-archive $GITHUB_REPO_SLUG $GITHUB_BUILD_PATH/$GITHUB_REPO_SLUG-$GITHUB_TAG.zip
          cd $GITHUB_BUILD_PATH
          ls $GITHUB_BUILD_PATH

      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files:
            ${{github.workspace}}/*.zip
